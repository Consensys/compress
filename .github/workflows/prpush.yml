on: 
  push:
      branches:
        - 'main'
  pull_request:
name: ci
jobs:
  staticcheck:
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: install Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.x

    - name: gofmt
      run: if [[ -n $(gofmt -l .) ]]; then echo "please run gofmt"; exit 1; fi
    - name: generated files should not be modified
      run: |
        go generate ./...
        git update-index --assume-unchanged go.mod
        git update-index --assume-unchanged go.sum
        if [[ -n $(git status --porcelain) ]]; then echo "git repo is dirty after running go generate -- please don't modify generated files"; echo $(git diff);echo $(git status --porcelain); exit 1; fi

     # hack to ensure golanglint process generated files
    - name: remove "generated by" comments from generated files 
      run: |
        find . -type f -name '*.go' -exec sed -i 's/Code generated by .* DO NOT EDIT/FOO/g' {} \;
      # on macos: find . -type f -name '*.go' -exec sed -i '' -E 's/Code generated by .* DO NOT EDIT/FOO/g' {} \;
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
          version: v1.54
          args: -v --timeout=5m
          skip-pkg-cache: true
  
  test:
    runs-on: ubuntu-latest
    permissions: 
      pull-requests: write
    steps:
    - name: checkout code
      uses: actions/checkout@v4
    - name: install Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.x

    # Install gotestfmt on the VM running the action.
    - name: Set up gotestfmt
      uses: gotesttools/gotestfmt-action@v2
      with:
        # Optional: pass GITHUB_TOKEN to avoid rate limiting.
        token: ${{ secrets.GITHUB_TOKEN }}

    # Run tests with nice formatting. Save the original log in /tmp/gotest.log
    - name: Run tests
      run: |
        set -euo pipefail
        go test -json -v -p 4 -timeout=30m ./... 2>&1 | gotestfmt
        go test -json -v -run=NONE -fuzz=Compress$ -fuzztime=30s ./lzss 2>&1 | gotestfmt 
        go test -json -v -run=NONE -fuzz=FuzzCompressedSize -fuzztime=30s ./lzss 2>&1 | gotestfmt 

    - name: Upload testdata
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: testdata
        path: ./lzss/testdata/fuzz
